//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
//file:noinspection GradlePackageVersionRange
plugins {
	id "fabric-loom" version "1.6.+"
	id "io.github.p03w.machete" version "1.+" // automatic jar compressing on build
	id "maven-publish"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
group = project.maven_group

// Formats the mod version to include the Minecraft version and build number (if present)
// axialeaa: 1.0.0+1.18.2-100
String buildNumber = System.getenv("GITHUB_RUN_NUMBER")
version = "${mod_version}+${minecraft_version}" + (buildNumber != null ? "-${buildNumber}" : "")

repositories {
	maven { url = "https://masa.dy.fi/maven" } // Carpet

	maven { url = "https://maven.shedaniel.me/" } // Cloth Config, REI
	maven { url = "https://maven.blamejared.com/" } // JEI
	maven { url = "https://modmaven.dev" } // JEI (Fallback)
	maven { url = "https://maven.parchmentmc.org" } // Parchment mappings
	maven { url = "https://maven.quiltmc.org/repository/release" } // Quilt Mappings
	maven { url = "https://maven.terraformersmc.com/releases/" } // Mod Menu
	maven { url = "https://mvn.devos.one/snapshots/" } // Create, Forge Tags, Milk Lib, Registrate
	maven { url = "https://mvn.devos.one/releases" } // Porting Lib
	maven { url = "https://raw.githubusercontent.com/Fuzss/modresources/main/maven/" } // Forge Config API Port
	maven { url = "https://maven.jamieswhiteshirt.com/libs-release" } // Reach Entity Attributes
	maven { url = "https://jitpack.io/" } // Mixin Extras, Fabric ASM
	maven { url = "https://maven.tterrag.com/" } // Flywheel
}

configurations.configureEach {
	resolutionStrategy {
		force("net.fabricmc:fabric-loader:${loader_version}")
	}
}

dependencies {
	// Setup
	minecraft("com.mojang:minecraft:${minecraft_version}")
	mappings(loom.layered {
		it.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${qm_version}:intermediary-v2")
		it.parchment("org.parchmentmc.data:parchment-${minecraft_version}:${parchment_version}@zip")
		it.officialMojangMappings { nameSyntheticMembers = false }
	})
	modImplementation("net.fabricmc:fabric-loader:${loader_version}")

	// Create - dependencies are added transitively
	modImplementation("com.simibubi.create:create-fabric-${minecraft_version}:${create_version}")

	// Carpet
	modImplementation("carpet:fabric-carpet:${carpet_mc_version}-${carpet_version}")

	// Development QOL
	modLocalRuntime("com.terraformersmc:modmenu:${modmenu_version}")
	modLocalRuntime("mezz.jei:jei-${minecraft_version}-fabric:${jei_version}")
}

processResources {
	// require dependencies to be the version compiled against or newer
	Map<String, String> properties = Map.of(
		"version", version,
		"loader_version", loader_version,
		"create_version", create_version,
		"carpet_version", carpet_version,
		"minecraft_version", minecraft_version
	)

	inputs.properties(properties)

	filesMatching("fabric.mod.json") {
		expand properties
	}
}

machete {
	// disable machete locally for faster builds
	enabled = buildNumber != null
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = Integer.parseInt(sourceCompatibility)
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This content does NOT have the same function as the content in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}
